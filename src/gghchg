// import { useState, useEffect } from 'react'

// function App() {
//   const [user, setUser] = useState(null)
//   const [prompt, setPrompt] = useState('')
//   const [style, setStyle] = useState('')
//   const [color, setColor] = useState('#3B82F6')
//   const [secondaryColor, setSecondaryColor] = useState('#10B981')
//   const [fontSize, setFontSize] = useState('24')
//   const [fontFamily, setFontFamily] = useState('Arial')
//   const [logoType, setLogoType] = useState('all')
//   const [logos, setLogos] = useState([])
//   const [savedLogos, setSavedLogos] = useState([])
//   const [loading, setLoading] = useState(false)
//   const [activeTab, setActiveTab] = useState('generate')
//   const [showLoginModal, setShowLoginModal] = useState(false)

//   // Mock user data for demo
//   useEffect(() => {
//     const storedUser = localStorage.getItem('logomaker_user')
//     if (storedUser) {
//       setUser(JSON.parse(storedUser))
//     }
//   }, [])

//   // OAuth simulation functions
//   const handleGoogleLogin = () => {
//     // Simulate OAuth flow
//     const mockUser = {
//       id: '1',
//       name: 'John Doe',
//       email: 'john.doe@example.com',
//       avatar: 'https://ui-avatars.com/api/?name=John+Doe&background=3B82F6&color=fff',
//       provider: 'google'
//     }
//     setUser(mockUser)
//     localStorage.setItem('logomaker_user', JSON.stringify(mockUser))
//     setShowLoginModal(false)
//   }

//   const handleGitHubLogin = () => {
//     // Simulate OAuth flow
//     const mockUser = {
//       id: '2',
//       name: 'Jane Smith',
//       email: 'jane.smith@example.com',
//       avatar: 'https://ui-avatars.com/api/?name=Jane+Smith&background=1F2937&color=fff',
//       provider: 'github'
//     }
//     setUser(mockUser)
//     localStorage.setItem('logomaker_user', JSON.stringify(mockUser))
//     setShowLoginModal(false)
//   }

//   const handleLogout = () => {
//     setUser(null)
//     localStorage.removeItem('logomaker_user')
//     setSavedLogos([])
//     setActiveTab('generate')
//   }

//   // Enhanced logo generation with more variations and customization
//   const generateAdvancedLogos = (prompt, style, primaryColor, secondaryColor, fontSize, fontFamily, logoType) => {
//     const words = prompt.split(' ')
//     const mainText = words[0] || 'Logo'
//     const subText = words.slice(1, 3).join(' ') || 'Brand'
    
//     const fontFamilyMap = {
//       'Arial': 'Arial, sans-serif',
//       'Helvetica': 'Helvetica, sans-serif',
//       'Times': 'Times New Roman, serif',
//       'Georgia': 'Georgia, serif',
//       'Courier': 'Courier New, monospace',
//       'Impact': 'Impact, sans-serif'
//     }

//     const logoVariations = [
//       // Modern gradient text
//       `<svg width="300" height="120" xmlns="http://www.w3.org/2000/svg">
//         <defs>
//           <linearGradient id="textGrad1" x1="0%" y1="0%" x2="100%" y2="100%">
//             <stop offset="0%" style="stop-color:${primaryColor};stop-opacity:1" />
//             <stop offset="100%" style="stop-color:${secondaryColor};stop-opacity:1" />
//           </linearGradient>
//           <filter id="shadow1" x="-20%" y="-20%" width="140%" height="140%">
//             <feDropShadow dx="2" dy="2" stdDeviation="3" flood-color="rgba(0,0,0,0.3)"/>
//           </filter>
//         </defs>
//         <rect width="300" height="120" fill="white"/>
//         <text x="150" y="65" font-family="${fontFamilyMap[fontFamily]}" font-size="${fontSize}" font-weight="bold" text-anchor="middle" fill="url(#textGrad1)" filter="url(#shadow1)">${mainText.toUpperCase()}</text>
//         <text x="150" y="85" font-family="${fontFamilyMap[fontFamily]}" font-size="12" text-anchor="middle" fill="#666">${subText}</text>
//       </svg>`,
      
//       // Circular badge with icon
//       `<svg width="300" height="120" xmlns="http://www.w3.org/2000/svg">
//         <defs>
//           <radialGradient id="circleGrad1" cx="50%" cy="50%" r="50%">
//             <stop offset="0%" style="stop-color:${primaryColor};stop-opacity:0.8" />
//             <stop offset="100%" style="stop-color:${secondaryColor};stop-opacity:1" />
//           </radialGradient>
//         </defs>
//         <rect width="300" height="120" fill="white"/>
//         <circle cx="60" cy="60" r="40" fill="url(#circleGrad1)"/>
//         <polygon points="60,35 75,55 45,55" fill="white" opacity="0.9"/>
//         <circle cx="60" cy="70" r="8" fill="white" opacity="0.9"/>
//         <text x="120" y="55" font-family="${fontFamilyMap[fontFamily]}" font-size="${fontSize}" font-weight="600" fill="#333">${mainText}</text>
//         <text x="120" y="75" font-family="${fontFamilyMap[fontFamily]}" font-size="14" fill="#666">${subText}</text>
//       </svg>`,
      
//       // Modern card design
//       `<svg width="300" height="120" xmlns="http://www.w3.org/2000/svg">
//         <defs>
//           <linearGradient id="cardGrad1" x1="0%" y1="0%" x2="100%" y2="0%">
//             <stop offset="0%" style="stop-color:${primaryColor};stop-opacity:0.1" />
//             <stop offset="100%" style="stop-color:${secondaryColor};stop-opacity:0.1" />
//           </linearGradient>
//         </defs>
//         <rect width="300" height="120" fill="white"/>
//         <rect x="20" y="20" width="260" height="80" rx="12" fill="url(#cardGrad1)" stroke="${primaryColor}" stroke-width="2"/>
//         <rect x="30" y="30" width="4" height="60" fill="${primaryColor}"/>
//         <text x="50" y="55" font-family="${fontFamilyMap[fontFamily]}" font-size="${fontSize}" font-weight="bold" fill="${primaryColor}">${mainText}</text>
//         <text x="50" y="75" font-family="${fontFamilyMap[fontFamily]}" font-size="12" fill="#666">${subText}</text>
//       </svg>`,
      
//       // Abstract geometric
//       `<svg width="300" height="120" xmlns="http://www.w3.org/2000/svg">
//         <rect width="300" height="120" fill="white"/>
//         <polygon points="40,20 80,20 60,50" fill="${primaryColor}"/>
//         <polygon points="40,50 80,50 60,80" fill="${secondaryColor}" opacity="0.8"/>
//         <rect x="85" y="35" width="30" height="30" fill="${primaryColor}" opacity="0.3" transform="rotate(45 100 50)"/>
//         <text x="140" y="55" font-family="${fontFamilyMap[fontFamily]}" font-size="${fontSize}" font-weight="600" fill="#333">${mainText}</text>
//         <text x="140" y="75" font-family="${fontFamilyMap[fontFamily]}" font-size="12" fill="#666">${subText}</text>
//       </svg>`,
      
//       // Minimalist line art
//       `<svg width="300" height="120" xmlns="http://www.w3.org/2000/svg">
//         <rect width="300" height="120" fill="white"/>
//         <circle cx="50" cy="60" r="25" fill="none" stroke="${primaryColor}" stroke-width="3"/>
//         <line x1="30" y1="45" x2="70" y2="75" stroke="${secondaryColor}" stroke-width="2"/>
//         <line x1="30" y1="75" x2="70" y2="45" stroke="${secondaryColor}" stroke-width="2"/>
//         <text x="100" y="65" font-family="${fontFamilyMap[fontFamily]}" font-size="${fontSize}" font-weight="300" fill="#333">${mainText}</text>
//         <line x1="100" y1="75" x2="200" y2="75" stroke="${primaryColor}" stroke-width="1"/>
//       </svg>`,
      
//       // 3D Effect
//       `<svg width="300" height="120" xmlns="http://www.w3.org/2000/svg">
//         <defs>
//           <linearGradient id="3dGrad1" x1="0%" y1="0%" x2="100%" y2="100%">
//             <stop offset="0%" style="stop-color:${adjustBrightness(primaryColor, 20)};stop-opacity:1" />
//             <stop offset="50%" style="stop-color:${primaryColor};stop-opacity:1" />
//             <stop offset="100%" style="stop-color:${adjustBrightness(primaryColor, -20)};stop-opacity:1" />
//           </linearGradient>
//         </defs>
//         <rect width="300" height="120" fill="white"/>
//         <rect x="30" y="30" width="60" height="60" fill="url(#3dGrad1)" transform="skewX(-10)"/>
//         <text x="35" y="65" font-family="${fontFamilyMap[fontFamily]}" font-size="20" font-weight="bold" fill="white">L</text>
//         <text x="110" y="65" font-family="${fontFamilyMap[fontFamily]}" font-size="${fontSize}" font-weight="600" fill="#333">${mainText}</text>
//         <text x="110" y="85" font-family="${fontFamilyMap[fontFamily]}" font-size="12" fill="#666">${subText}</text>
//       </svg>`
//     ]

//     // Filter logos based on type selection
//     if (logoType === 'text') return logoVariations.slice(0, 2)
//     if (logoType === 'icon') return logoVariations.slice(2, 4)
//     if (logoType === 'minimal') return logoVariations.slice(4, 6)
    
//     return logoVariations.map(svg => 'data:image/svg+xml;base64,' + btoa(svg))
//   }

//   const adjustBrightness = (hex, percent) => {
//     const num = parseInt(hex.replace("#", ""), 16)
//     const amt = Math.round(2.55 * percent)
//     const R = (num >> 16) + amt
//     const G = (num >> 8 & 0x00FF) + amt
//     const B = (num & 0x0000FF) + amt
//     return "#" + (0x1000000 + (R < 255 ? R < 1 ? 0 : R : 255) * 0x10000 +
//       (G < 255 ? G < 1 ? 0 : G : 255) * 0x100 +
//       (B < 255 ? B < 1 ? 0 : B : 255)).toString(16).slice(1)
//   }

//   const handleGenerate = async () => {
//     if (!user) {
//       setShowLoginModal(true)
//       return
//     }
    
//     if (!prompt.trim()) {
//       alert('Please enter a description for your logo')
//       return
//     }

//     setLoading(true)
//     await new Promise(resolve => setTimeout(resolve, 2000))
    
//     const generatedLogos = generateAdvancedLogos(prompt, style, color, secondaryColor, fontSize, fontFamily, logoType)
//     setLogos(generatedLogos)
//     setLoading(false)
//   }

//   const saveLogo = (logoData, index) => {
//     if (!user) return
    
//     const savedLogo = {
//       id: Date.now() + index,
//       data: logoData,
//       prompt,
//       style,
//       color,
//       secondaryColor,
//       createdAt: new Date().toISOString()
//     }
    
//     setSavedLogos(prev => [...prev, savedLogo])
//     alert('Logo saved to your collection!')
//   }

//   const downloadSVG = (logoData, filename) => {
//     const svgData = atob(logoData.split(',')[1])
//     const blob = new Blob([svgData], { type: 'image/svg+xml' })
//     const url = URL.createObjectURL(blob)
//     const a = document.createElement('a')
//     a.href = url
//     a.download = `${filename}.svg`
//     a.click()
//     URL.revokeObjectURL(url)
//   }

//   const downloadPNG = (logoData, filename) => {
//     const canvas = document.createElement('canvas')
//     const ctx = canvas.getContext('2d')
//     canvas.width = 600
//     canvas.height = 240
    
//     const img = new Image()
//     img.onload = () => {
//       ctx.fillStyle = 'white'
//       ctx.fillRect(0, 0, 600, 240)
//       ctx.drawImage(img, 0, 0, 600, 240)
//       canvas.toBlob(blob => {
//         const url = URL.createObjectURL(blob)
//         const a = document.createElement('a')
//         a.href = url
//         a.download = `${filename}.png`
//         a.click()
//         URL.revokeObjectURL(url)
//       })
//     }
//     img.src = logoData
//   }

//   return (
//     <div className="min-h-screen bg-gradient-to-br from-indigo-50 via-purple-50 to-pink-50">
//       {/* Navigation Header */}
//       <nav className="bg-white shadow-lg border-b border-gray-200">
//         <div className="max-w-6xl mx-auto px-6 py-4">
//           <div className="flex justify-between items-center">
//             <div className="flex items-center gap-3">
//               <div className="w-8 h-8 bg-gradient-to-r from-blue-500 to-purple-600 rounded-lg flex items-center justify-center">
//                 <svg className="w-5 h-5 text-white" fill="currentColor" viewBox="0 0 20 20">
//                   <path d="M4 3a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V5a2 2 0 00-2-2H4zm12 12H4l4-8 3 6 2-4 3 6z"/>
//                 </svg>
//               </div>
//               <h1 className="text-2xl font-bold bg-gradient-to-r from-blue-600 to-purple-600 bg-clip-text text-transparent">
//                 LogoMaker Pro
//               </h1>
//             </div>
            
//             <div className="flex items-center gap-4">
//               {user ? (
//                 <div className="flex items-center gap-3">
//                   <img src={user.avatar} alt={user.name} className="w-8 h-8 rounded-full"/>
//                   <span className="text-gray-700 font-medium">{user.name}</span>
//                   <button
//                     onClick={handleLogout}
//                     className="text-gray-500 hover:text-gray-700 text-sm"
//                   >
//                     Logout
//                   </button>
//                 </div>
//               ) : (
//                 <button
//                   onClick={() => setShowLoginModal(true)}
//                   className="bg-gradient-to-r from-blue-500 to-purple-600 text-white px-6 py-2 rounded-lg font-semibold hover:from-blue-600 hover:to-purple-700 transition-all duration-200"
//                 >
//                   Sign In
//                 </button>
//               )}
//             </div>
//           </div>
//         </div>
//       </nav>

//       {/* Login Modal */}
//       {showLoginModal && (
//         <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4">
//           <div className="bg-white rounded-2xl p-8 max-w-md w-full shadow-2xl">
//             <div className="text-center mb-6">
//               <h2 className="text-2xl font-bold text-gray-800 mb-2">Sign In to LogoMaker Pro</h2>
//               <p className="text-gray-600">Create and save unlimited logos</p>
//             </div>
            
//             <div className="space-y-4">
//               <button
//                 onClick={handleGoogleLogin}
//                 className="w-full flex items-center justify-center gap-3 bg-white border border-gray-300 text-gray-700 px-6 py-3 rounded-lg hover:bg-gray-50 transition-colors duration-200"
//               >
//                 <svg className="w-5 h-5" viewBox="0 0 24 24">
//                   <path fill="#4285F4" d="M22.56 12.25c0-.78-.07-1.53-.2-2.25H12v4.26h5.92c-.26 1.37-1.04 2.53-2.21 3.31v2.77h3.57c2.08-1.92 3.28-4.74 3.28-8.09z"/>
//                   <path fill="#34A853" d="M12 23c2.97 0 5.46-.98 7.28-2.66l-3.57-2.77c-.98.66-2.23 1.06-3.71 1.06-2.86 0-5.29-1.93-6.16-4.53H2.18v2.84C3.99 20.53 7.7 23 12 23z"/>
//                   <path fill="#FBBC05" d="M5.84 14.09c-.22-.66-.35-1.36-.35-2.09s.13-1.43.35-2.09V7.07H2.18C1.43 8.55 1 10.22 1 12s.43 3.45 1.18 4.93l2.85-2.22.81-.62z"/>
//                   <path fill="#EA4335" d="M12 5.38c1.62 0 3.06.56 4.21 1.64l3.15-3.15C17.45 2.09 14.97 1 12 1 7.7 1 3.99 3.47 2.18 7.07l3.66 2.84c.87-2.6 3.3-4.53 6.16-4.53z"/>
//                 </svg>
//                 Continue with Google
//               </button>
              
//               <button
//                 onClick={handleGitHubLogin}
//                 className="w-full flex items-center justify-center gap-3 bg-gray-900 text-white px-6 py-3 rounded-lg hover:bg-gray-800 transition-colors duration-200"
//               >
//                 <svg className="w-5 h-5" fill="currentColor" viewBox="0 0 24 24">
//                   <path d="M12 0C5.374 0 0 5.373 0 12 0 17.302 3.438 21.8 8.207 23.387c.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23A11.509 11.509 0 0112 5.803c1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576C20.566 21.797 24 17.3 24 12c0-6.627-5.373-12-12-12z"/>
//                 </svg>
//                 Continue with GitHub
//               </button>
//             </div>
            
//             <button
//               onClick={() => setShowLoginModal(false)}
//               className="w-full mt-4 text-gray-500 hover:text-gray-700 text-sm"
//             >
//               Cancel
//             </button>
//           </div>
//         </div>
//       )}

//       <div className="max-w-6xl mx-auto px-6 py-8">
//         {/* Tabs */}
//         {user && (
//           <div className="flex justify-center mb-8">
//             <div className="bg-white rounded-lg p-1 shadow-sm border">
//               <button
//                 onClick={() => setActiveTab('generate')}
//                 className={`px-6 py-2 rounded-md font-medium transition-all duration-200 ${
//                   activeTab === 'generate' 
//                     ? 'bg-blue-500 text-white shadow-md' 
//                     : 'text-gray-600 hover:text-gray-800'
//                 }`}
//               >
//                 Generate Logos
//               </button>
//               <button
//                 onClick={() => setActiveTab('saved')}
//                 className={`px-6 py-2 rounded-md font-medium transition-all duration-200 ${
//                   activeTab === 'saved' 
//                     ? 'bg-blue-500 text-white shadow-md' 
//                     : 'text-gray-600 hover:text-gray-800'
//                 }`}
//               >
//                 Saved Logos ({savedLogos.length})
//               </button>
//             </div>
//           </div>
//         )}

//         {/* Generate Tab */}
//         {activeTab === 'generate' && (
//           <>
//             <div className="text-center mb-8">
//               <h2 className="text-4xl font-bold text-gray-800 mb-4">Create Professional Logos with AI</h2>
//               <p className="text-xl text-gray-600 max-w-2xl mx-auto">
//                 Generate stunning, customizable logos in seconds. Perfect for startups, businesses, and personal projects.
//               </p>
//             </div>

//             {/* Enhanced Input Section */}
//             <div className="max-w-4xl mx-auto bg-white shadow-xl p-8 rounded-2xl mb-8 border">
//               <div className="grid grid-cols-1 lg:grid-cols-2 gap-8">
//                 {/* Left Column */}
//                 <div className="space-y-6">
//                   <div>
//                     <label className="block text-sm font-semibold text-gray-700 mb-3">
//                       Describe Your Brand
//                     </label>
//                     <textarea
//                       value={prompt}
//                       onChange={(e) => setPrompt(e.target.value)}
//                       placeholder="e.g., Modern tech startup focused on AI solutions for healthcare..."
//                       rows="3"
//                       className="w-full border border-gray-300 rounded-lg px-4 py-3 focus:ring-2 focus:ring-blue-500 focus:border-transparent resize-none"
//                     />
//                   </div>

//                   <div className="grid grid-cols-2 gap-4">
//                     <div>
//                       <label className="block text-sm font-semibold text-gray-700 mb-3">Style</label>
//                       <select
//                         value={style}
//                         onChange={(e) => setStyle(e.target.value)}
//                         className="w-full border border-gray-300 rounded-lg px-4 py-3 focus:ring-2 focus:ring-blue-500 focus:border-transparent"
//                       >
//                         <option value="">Any Style</option>
//                         <option value="minimal">Minimal</option>
//                         <option value="modern">Modern</option>
//                         <option value="vintage">Vintage</option>
//                         <option value="bold">Bold</option>
//                         <option value="elegant">Elegant</option>
//                         <option value="playful">Playful</option>
//                         <option value="corporate">Corporate</option>
//                       </select>
//                     </div>

//                     <div>
//                       <label className="block text-sm font-semibold text-gray-700 mb-3">Logo Type</label>
//                       <select
//                         value={logoType}
//                         onChange={(e) => setLogoType(e.target.value)}
//                         className="w-full border border-gray-300 rounded-lg px-4 py-3 focus:ring-2 focus:ring-blue-500 focus:border-transparent"
//                       >
//                         <option value="all">All Types</option>
//                         <option value="text">Text-based</option>
//                         <option value="icon">Icon + Text</option>
//                         <option value="minimal">Minimal</option>
//                       </select>
//                     </div>
//                   </div>
//                 </div>

//                 {/* Right Column */}
//                 <div className="space-y-6">
//                   <div className="grid grid-cols-2 gap-4">
//                     <div>
//                       <label className="block text-sm font-semibold text-gray-700 mb-3">Primary Color</label>
//                       <div className="flex items-center gap-3">
//                         <input
//                           type="color"
//                           value={color}
//                           onChange={(e) => setColor(e.target.value)}
//                           className="w-12 h-12 border border-gray-300 rounded-lg cursor-pointer"
//                         />
//                         <input
//                           type="text"
//                           value={color}
//                           onChange={(e) => setColor(e.target.value)}
//                           className="flex-1 border border-gray-300 rounded-lg px-3 py-3 text-sm font-mono"
//                         />
//                       </div>
//                     </div>

//                     <div>
//                       <label className="block text-sm font-semibold text-gray-700 mb-3">Secondary Color</label>
//                       <div className="flex items-center gap-3">
//                         <input
//                           type="color"
//                           value={secondaryColor}
//                           onChange={(e) => setSecondaryColor(e.target.value)}
//                           className="w-12 h-12 border border-gray-300 rounded-lg cursor-pointer"
//                         />
//                         <input
//                           type="text"
//                           value={secondaryColor}
//                           onChange={(e) => setSecondaryColor(e.target.value)}
//                           className="flex-1 border border-gray-300 rounded-lg px-3 py-3 text-sm font-mono"
//                         />
//                       </div>
//                     </div>
//                   </div>

//                   <div className="grid grid-cols-2 gap-4">
//                     <div>
//                       <label className="block text-sm font-semibold text-gray-700 mb-3">Font Family</label>
//                       <select
//                         value={fontFamily}
//                         onChange={(e) => setFontFamily(e.target.value)}
//                         className="w-full border border-gray-300 rounded-lg px-4 py-3 focus:ring-2 focus:ring-blue-500 focus:border-transparent"
//                       >
//                         <option value="Arial">Arial</option>
//                         <option value="Helvetica">Helvetica</option>
//                         <option value="Times">Times New Roman</option>
//                         <option value="Georgia">Georgia</option>
//                         <option value="Courier">Courier New</option>
//                         <option value="Impact">Impact</option>
//                       </select>
//                     </div>

//                     <div>
//                       <label className="block text-sm font-semibold text-gray-700 mb-3">Font Size</label>
//                       <input
//                         type="range"
//                         min="16"
//                         max="36"
//                         value={fontSize}
//                         onChange={(e) => setFontSize(e.target.value)}
//                         className="w-full"
//                       />
//                       <div className="text-center text-sm text-gray-500 mt-1">{fontSize}px</div>
//                     </div>
//                   </div>
//                 </div>
//               </div>

//               <button
//                 onClick={handleGenerate}
//                 disabled={loading}
//                 className="w-full bg-gradient-to-r from-blue-500 via-purple-500 to-pink-500 text-white py-4 rounded-xl font-bold text-lg hover:from-blue-600 hover:via-purple-600 hover:to-pink-600 transition-all duration-300 disabled:opacity-50 disabled:cursor-not-allowed mt-8 shadow-lg"
//               >
//                 {loading ? (
//                   <div className="flex items-center justify-center gap-3">
//                     <div className="w-6 h-6 border-3 border-white border-t-transparent rounded-full animate-spin"></div>
//                     Generating Your Perfect Logos...
//                   </div>
//                 ) : (
//                   <div className="flex items-center justify-center gap-2">
//                     <svg className="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
//                       <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M13 10V3L4 14h7v7l9-11h-7z" />
//                     </svg>
//                     Generate Professional Logos
//                   </div>
//                 )}
//               </button>
//             </div>

//             {/* Logo Results */}
//             {logos.length > 0 && !loading && (
//               <div className="max-w-6xl mx-auto">
//                 <h3 className="text-3xl font-bold text-gray-800 mb-8 text-center">Your Generated Logos</h3>
//                 <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
//                   {logos.map((logo, index) => (
//                     <div key={index} className="bg-white rounded-2xl shadow-xl overflow-hidden hover:shadow-2xl transition-all duration-300 transform hover:-translate-y-1">
//                       <div className="p-8 bg-gradient-to-br from-gray-50 to-gray-100 flex items-center justify-center" style={{minHeight: '200px'}}>
//                         <img 
//                           src={logo} 
//                           alt={`Logo ${index + 1}`} 
//                           className="max-w-full h-auto drop-shadow-lg"
//                           style={{maxHeight: '120px'}}
//                         />
//                       </div>
//                       <div className="p-6 border-t bg-white">
//                         <div className="flex justify-between items-center mb-4">
//                           <div>
//                             <h4 className="font-semibold text-gray-800">Logo Variation {index + 1}</h4>
//                             <p className="text-sm text-gray-500">Professional quality</p>
//                           </div>
//                           {user && (
//                             <button
//                               onClick={() => saveLogo(logo, index)}
//                               className="text-red-500 hover:text-red-700 transition-colors duration-200"
//                               title="Save to collection"
//                             >
//                               <svg className="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
//                                 <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z" />
//                               </svg>
//                             </button>
//                           )}
//                         </div>
//                         <div className="flex gap-3">
//                           <button
//                             onClick={() => downloadPNG(logo, `logo-${index + 1}`)}
//                             className="flex-1 bg-gradient-to-r from-green-500 to-emerald-600 hover:from-green-600 hover:to-emerald-700 text-white px-4 py-2.5 rounded-lg font-medium transition-all duration-200 flex items-center justify-center gap-2"
//                           >
//                             <svg className="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
//                               <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M12 10v6m0 0l-3-3m3 3l3-3m2 8H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z" />
//                             </svg>
//                             PNG
//                           </button>
//                           <button
//                             onClick={() => downloadSVG(logo, `logo-${index + 1}`)}
//                             className="flex-1 bg-gradient-to-r from-blue-500 to-indigo-600 hover:from-blue-600 hover:to-indigo-700 text-white px-4 py-2.5 rounded-lg font-medium transition-all duration-200 flex items-center justify-center gap-2"
//                           >
//                             <svg className="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
//                               <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M12 10v6m0 0l-3-3m3 3l3-3m2 8H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z" />
//                             </svg>
//                             SVG
//                           </button>
//                         </div>
//                       </div>
//                     </div>
//                   ))}
//                 </div>
                
//                 <div className="text-center mt-12">
//                   <div className="bg-white rounded-2xl p-8 shadow-lg border max-w-2xl mx-auto">
//                     <h4 className="text-xl font-semibold text-gray-800 mb-4">Love your logos?</h4>
//                     <p className="text-gray-600 mb-6">Generate more variations or try different styles and colors</p>
//                     <div className="flex gap-4 justify-center">
//                       <button
//                         onClick={handleGenerate}
//                         className="bg-gradient-to-r from-purple-500 to-pink-600 hover:from-purple-600 hover:to-pink-700 text-white px-8 py-3 rounded-lg font-semibold transition-all duration-200"
//                       >
//                         Generate More
//                       </button>
//                       <button
//                         onClick={() => {
//                           setPrompt('')
//                           setLogos([])
//                         }}
//                         className="bg-gray-200 hover:bg-gray-300 text-gray-700 px-8 py-3 rounded-lg font-semibold transition-all duration-200"
//                       >
//                         Start Fresh
//                       </button>
//                     </div>
//                   </div>
//                 </div>
//               </div>
//             )}

//             {/* Empty State */}
//             {logos.length === 0 && !loading && (
//               <div className="text-center py-16">
//                 <div className="w-32 h-32 bg-gradient-to-br from-blue-100 to-purple-100 rounded-full flex items-center justify-center mx-auto mb-8">
//                   <svg className="w-16 h-16 text-blue-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
//                     <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={1.5} d="M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z" />
//                   </svg>
//                 </div>
//                 <h3 className="text-2xl font-bold text-gray-800 mb-4">Ready to create amazing logos?</h3>
//                 <p className="text-gray-600 max-w-md mx-auto mb-8">
//                   Describe your brand, choose your preferences, and let our AI create professional logos for you in seconds.
//                 </p>
//                 <div className="flex justify-center gap-8 text-sm text-gray-500">
//                   <div className="flex items-center gap-2">
//                     <svg className="w-5 h-5 text-green-500" fill="currentColor" viewBox="0 0 20 20">
//                       <path fillRule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clipRule="evenodd" />
//                     </svg>
//                     Multiple variations
//                   </div>
//                   <div className="flex items-center gap-2">
//                     <svg className="w-5 h-5 text-green-500" fill="currentColor" viewBox="0 0 20 20">
//                       <path fillRule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clipRule="evenodd" />
//                     </svg>
//                     High quality downloads
//                   </div>
//                   <div className="flex items-center gap-2">
//                     <svg className="w-5 h-5 text-green-500" fill="currentColor" viewBox="0 0 20 20">
//                       <path fillRule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clipRule="evenodd" />
//                     </svg>
//                     Fully customizable
//                   </div>
//                 </div>
//               </div>
//             )}
//           </>
//         )}

//         {/* Saved Logos Tab */}
//         {activeTab === 'saved' && user && (
//           <div className="max-w-6xl mx-auto">
//             <div className="text-center mb-8">
//               <h2 className="text-3xl font-bold text-gray-800 mb-4">Your Saved Logos</h2>
//               <p className="text-gray-600">All your favorite logo designs in one place</p>
//             </div>

//             {savedLogos.length > 0 ? (
//               <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
//                 {savedLogos.map((savedLogo) => (
//                   <div key={savedLogo.id} className="bg-white rounded-2xl shadow-lg overflow-hidden hover:shadow-xl transition-all duration-300">
//                     <div className="p-6 bg-gray-50 flex items-center justify-center" style={{minHeight: '180px'}}>
//                       <img 
//                         src={savedLogo.data} 
//                         alt="Saved Logo" 
//                         className="max-w-full h-auto"
//                         style={{maxHeight: '100px'}}
//                       />
//                     </div>
//                     <div className="p-6">
//                       <div className="mb-4">
//                         <h4 className="font-semibold text-gray-800 mb-1">"{savedLogo.prompt}"</h4>
//                         <p className="text-sm text-gray-500">
//                           Saved on {new Date(savedLogo.createdAt).toLocaleDateString()}
//                         </p>
//                         <div className="flex items-center gap-2 mt-2">
//                           <div className="w-4 h-4 rounded-full" style={{backgroundColor: savedLogo.color}}></div>
//                           <div className="w-4 h-4 rounded-full" style={{backgroundColor: savedLogo.secondaryColor}}></div>
//                           <span className="text-xs text-gray-500 ml-2">{savedLogo.style || 'Default'} style</span>
//                         </div>
//                       </div>
//                       <div className="flex gap-3">
//                         <button
//                           onClick={() => downloadPNG(savedLogo.data, `saved-logo-${savedLogo.id}`)}
//                           className="flex-1 bg-green-500 hover:bg-green-600 text-white px-4 py-2 rounded-lg text-sm font-medium transition-colors duration-200"
//                         >
//                           PNG
//                         </button>
//                         <button
//                           onClick={() => downloadSVG(savedLogo.data, `saved-logo-${savedLogo.id}`)}
//                           className="flex-1 bg-blue-500 hover:bg-blue-600 text-white px-4 py-2 rounded-lg text-sm font-medium transition-colors duration-200"
//                         >
//                           SVG
//                         </button>
//                         <button
//                           onClick={() => setSavedLogos(prev => prev.filter(logo => logo.id !== savedLogo.id))}
//                           className="text-red-500 hover:text-red-700 px-2"
//                           title="Remove from collection"
//                         >
//                           <svg className="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
//                             <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16" />
//                           </svg>
//                         </button>
//                       </div>
//                     </div>
//                   </div>
//                 ))}
//               </div>
//             ) : (
//               <div className="text-center py-16">
//                 <div className="w-24 h-24 bg-gray-200 rounded-full flex items-center justify-center mx-auto mb-6">
//                   <svg className="w-12 h-12 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
//                     <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M5 5a2 2 0 012-2h10a2 2 0 012 2v16l-7-3.5L5 21V5z" />
//                   </svg>
//                 </div>
//                 <h3 className="text-xl font-semibold text-gray-800 mb-2">No saved logos yet</h3>
//                 <p className="text-gray-600 mb-6">Start generating logos and save your favorites!</p>
//                 <button
//                   onClick={() => setActiveTab('generate')}
//                   className="bg-blue-500 hover:bg-blue-600 text-white px-6 py-3 rounded-lg font-semibold transition-colors duration-200"
//                 >
//                   Generate Your First Logo
//                 </button>
//               </div>
//             )}
//           </div>
//         )}

//         {/* Features Section */}
//         <div className="mt-20 bg-white rounded-2xl shadow-lg p-12 border">
//           <div className="text-center mb-12">
//             <h3 className="text-3xl font-bold text-gray-800 mb-4">Why Choose LogoMaker Pro?</h3>
//             <p className="text-gray-600 max-w-2xl mx-auto">
//               Professional-grade logos powered by advanced AI technology
//             </p>
//           </div>
          
//           <div className="grid grid-cols-1 md:grid-cols-3 gap-8">
//             <div className="text-center">
//               <div className="w-16 h-16 bg-gradient-to-br from-blue-500 to-purple-600 rounded-2xl flex items-center justify-center mx-auto mb-4">
//                 <svg className="w-8 h-8 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
//                   <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M13 10V3L4 14h7v7l9-11h-7z" />
//                 </svg>
//               </div>
//               <h4 className="text-xl font-semibold text-gray-800 mb-2">Lightning Fast</h4>
//               <p className="text-gray-600">Generate professional logos in seconds, not hours</p>
//             </div>
            
//             <div className="text-center">
//               <div className="w-16 h-16 bg-gradient-to-br from-green-500 to-emerald-600 rounded-2xl flex items-center justify-center mx-auto mb-4">
//                 <svg className="w-8 h-8 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
//                   <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M12 6V4m0 2a2 2 0 100 4m0-4a2 2 0 110 4m-6 8a2 2 0 100-4m0 4a2 2 0 100 4m0-4v2m0-6V4m6 6v10m6-2a2 2 0 100-4m0 4a2 2 0 100 4m0-4v2m0-6V4" />
//                 </svg>
//               </div>
//               <h4 className="text-xl font-semibold text-gray-800 mb-2">Fully Customizable</h4>
//               <p className="text-gray-600">Adjust colors, fonts, styles and more to match your brand</p>
//             </div>
            
//             <div className="text-center">
//               <div className="w-16 h-16 bg-gradient-to-br from-pink-500 to-red-600 rounded-2xl flex items-center justify-center mx-auto mb-4">
//                 <svg className="w-8 h-8 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
//                   <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M12 10v6m0 0l-3-3m3 3l3-3m2 8H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z" />
//                 </svg>
//               </div>
//               <h4 className="text-xl font-semibold text-gray-800 mb-2">High Quality</h4>
//               <p className="text-gray-600">Download in PNG, SVG, and PDF formats for any use case</p>
//             </div>
//           </div>
//         </div>
//       </div>
//     </div>
//   )
// }

// export default App



// 74073909821-s2b60lvld48eblbokdtjtnadg9jum23a.apps.googleusercontent.com


// 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